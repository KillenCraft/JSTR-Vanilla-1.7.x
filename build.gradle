plugins {
    id 'base'
}

defaultTasks 'resourcepack'
buildDir = 'out'

// Load the archive file name from the properties file
def packFileName = project.findProperty('packFileName') ?: 'resourcepack.zip'

// Task to sync files while maintaining folder structure and only copying changed files
task unpacked(type: Sync) {
    includeEmptyDirs = false
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from('assets') {
        into 'assets'
    }
    from('Reika') {
        into 'Reika'
    }
    from ('pack.png', 'pack.mcmeta')

    into "${buildDir}/unpacked"

    exclude '**/*.md', '**/*.psd', '**/desktop.ini', '**/Thumbs.db'
}

// Task to create a ZIP file from the unpacked files
task resourcepack(type: Zip) {
    includeEmptyDirs = false
    group = 'Build'
    description = "Builds the resource pack."
    archiveFileName.set(packFileName)

    from tasks.unpacked
    dependsOn tasks.unpacked
}

tasks.assemble.dependsOn 'resourcepack'
